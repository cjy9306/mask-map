{"version":3,"sources":["components/Header.js","components/Store.js","components/MapInfo.js","components/MaskMap.js","App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","styled","header","LabelWrapper","div","ControlWrapper","InputField","input","SearchButton","button","LogoIcon","FontAwesomeIcon","RefreshIcon","SearchIcon","Header","onSearch","onRefresh","useState","keyword","setKeyword","icon","faFirstAid","size","alt","faRedo","onClick","value","onChange","e","target","onKeyUp","keyCode","placeholder","faSearch","aria-label","StoreContainer","section","CustomWrapper","AddressWrapper","props","visible","backgroundColor","MarkerIcon","color","Store","store","remain_stat","name","addr","faMapMarkerAlt","InfoContainer","MarkerItem","MapInfo","MapContainer","window","innerHeight","overlayedStores","overlayes","map","MaskMap","markStores","lat","lng","a","url","axios","get","timeout","data","result","position","content","i","count","undefined","stores","code","kakao","maps","LatLng","renderToString","key","customOverlay","CustomOverlay","push","setMap","alert","center","getCenter","length","getLat","getLng","useEffect","container","document","getElementById","options","level","Map","zoomControl","ZoomControl","addControl","ControlPosition","BOTTOMRIGHT","event","addListener","ps","services","Places","keywordSearch","status","pagination","Status","OK","bounds","LatLngBounds","extend","y","x","Number","setBounds","id","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5de57d02.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFirstAid, faRedo, faSearch } from '@fortawesome/free-solid-svg-icons';\n\nconst HeaderContainer = styled.header`\n\tbackground-color: #3c779f;\n\tleft: 0;\n\tposition: fixed;\n\ttop: 0;\n\twidth: 100%;\n\tz-index: 10;\n\n\t@media only screen and (min-width: 621px) {\n\t\theight: 60px;\n\t}\n\n\t@media only screen and (max-width: 620px) {\n\t\theight: 40px;\n\t}\n`;\n\nconst LabelWrapper = styled.div`\n\tcolor: white;\n\tfloat: left;\n\tmargin-left: 16px;\n\n\t@media only screen and (min-width: 621px) {\n\t\tfont-size: 32px;\n\t\tline-height: 60px;\n\t}\n\n\t@media only screen and (max-width: 620px) {\n\t\tfont-size: 18px;\n\t\tline-height: 40px;\n\t}\n`;\n\nconst ControlWrapper = styled.div`\n\tdisplay: flex;\n\tfloat: right;\n\tjustify-content: space-between;\n\tvertical-align: middle;\n\n\t@media only screen and (min-width: 621px) {\n\t\tmargin: 10px 12px;\n\t\twidth: 310px;\n\t}\n\n\t@media only screen and (max-width: 620px) {\n\t\tmargin: 5px 12px;\n\t\twidth: 180px;\n\t}\n`;\n\nconst InputField = styled.input`\n\tborder: none;\n\tbox-shadow: none;\n\tbox-sizing: border-box;\n\tbox-shadow: none;\n\tborder-radius: 3px;\n\tbackground-color: hsla(0, 0%, 100%, 0.8);\n\toutline: 0;\n\n\t@media only screen and (min-width: 621px) {\n\t\twidth: 230px;\n\t\theight: 40px;\n\t\tline-height: 40px;\n\t\tfont-size: 16px;\n\t\tpadding: 0 16px;\n\t}\n\n\t@media only screen and (max-width: 620px) {\n\t\twidth: 120px;\n\t\theight: 30px;\n\t\tline-height: 30px;\n\t\tfont-size: 12px;\n\t\tpadding: 0 8px;\n\t}\n`;\n\nconst SearchButton = styled.button`\n\tbackground-color: hsla(0, 0%, 100%, 0.6);\n\tborder: none;\n\tborder-radius: 4px;\n\tbox-shadow: none;\n\tcolor: black;\n\tcursor: pointer;\n\tline-height: 1.499;\n\tpadding: 0 12px;\n\ttext-align: center;\n\t&:hover {\n\t\tbackground-color: hsla(0, 0%, 100%, 0.8);\n\t}\n\n\t@media only screen and (min-width: 621px) {\n\t\theight: 40px;\n\t}\n\n\t@media only screen and (max-width: 620px) {\n\t\theight: 30px;\n\t}\n`;\n\nconst LogoIcon = styled(FontAwesomeIcon)`\n\t@media only screen and (min-width: 621px) {\n\t\tfont-size: 32px;\n\t\tmargin-right: 16px;\n\t}\n\n\t@media only screen and (max-width: 620px) {\n\t\tfont-size: 22px;\n\t\tmargin-right: 8px;\n\t}\n`;\n\nconst RefreshIcon = styled(FontAwesomeIcon)`\n\tcolor: white;\n\tcursor: pointer;\n\t&:hover {\n\t\tcolor: hsla(0, 0%, 100%, 0.3);\n\t}\n\n\t@media only screen and (min-width: 621px) {\n\t\tfont-size: 20px;\n\t\tmargin-top: 10px;\n\t\tmargin-right: 8px;\n\t}\n\n\t@media only screen and (max-width: 620px) {\n\t\tfont-size: 16px;\n\t\tmargin-top: 8px;\n\t\tmargin-right: 4px;\n\t}\n`;\n\nconst SearchIcon = styled(FontAwesomeIcon)`\n\t@media only screen and (min-width: 621px) {\n\t\tfont-size: 20px;\n\t}\n\n\t@media only screen and (max-width: 620px) {\n\t\tfont-size: 12px;\n\t}\n`;\n\nconst Header = ({ onSearch, onRefresh }) => {\n\tconst [keyword, setKeyword] = useState('');\n\tconst onChange = (e) => {\n\t\tsetKeyword(e.target.value);\n\t};\n\n\tconst onKeyUp = (e) => {\n\t\t// enter capture\n\t\tif (e.keyCode === 13) {\n\t\t\tonSearch(keyword);\n\t\t}\n\t};\n\n\treturn (\n\t\t<HeaderContainer>\n\t\t\t<LabelWrapper>\n\t\t\t\t<LogoIcon icon={faFirstAid} size=\"xs\" alt=\"새로고침\" />\n\t\t\t\tMask Map\n\t\t\t</LabelWrapper>\n\t\t\t<ControlWrapper>\n\t\t\t\t<RefreshIcon icon={faRedo} size=\"xs\" onClick={onRefresh} />\n\t\t\t\t<InputField value={keyword} onChange={onChange} onKeyUp={onKeyUp} placeholder=\"지역, 건물 등을 검색하세요\" />\n\t\t\t\t<SearchButton onClick={() => onSearch(keyword)}>\n\t\t\t\t\t<SearchIcon icon={faSearch} size=\"xs\" aria-label=\"Search\" />\n\t\t\t\t</SearchButton>\n\t\t\t</ControlWrapper>\n\t\t</HeaderContainer>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst StoreContainer = styled.section`\n\tcursor: pointer;\n\ttext-align: center;\n`;\n\nconst CustomWrapper = styled.div`\n\tbox-sizing: border-box;\n\tborder-radius: 4px;\n\tbackground-color: #666666;\n\tcolor: white;\n\tfont-size: 12px;\n\tmargin-bottom: 4px;\n\tpadding: 0 4px;\n`;\n\nconst AddressWrapper = styled(CustomWrapper)`\n\tdisplay: ${(props) => (props.visible ? 'block' : 'none')};\n`;\n\nconst LabelWrapper = styled(CustomWrapper)`\n\tbackground-color: ${(props) => props.backgroundColor};\n\tcolor: ${(props) => (props.backgroundColor === '#f2d600' ? 'black' : 'white')};\n`;\n\nconst MarkerIcon = styled(FontAwesomeIcon)`\n\tfont-size: 32px;\n\tcolor: ${(props) => props.color};\n`;\n\nconst Store = ({ store }) => {\n\tlet color = '#666666';\n\tif (store.remain_stat === 'plenty') color = '#61bd4f';\n\telse if (store.remain_stat === 'some') color = '#f2d600';\n\telse if (store.remain_stat === 'few') color = '#eb5a46';\n\n\treturn (\n\t\t<StoreContainer>\n\t\t\t<LabelWrapper backgroundColor={color}>{store && store.name}</LabelWrapper>\n\t\t\t<AddressWrapper>{store && store.addr}</AddressWrapper>\n\t\t\t<MarkerIcon icon={faMapMarkerAlt} size=\"xs\" color={color} />\n\t\t</StoreContainer>\n\t);\n};\n\nexport default Store;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst InfoContainer = styled.section`\n\tbackground-color: hsla(0, 0%, 100%, 0.8);\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: fixed;\n\tz-index: 10;\n\n\t@media only screen and (min-width: 621px) {\n\t\theight: 150px;\n\t\tpadding: 16px;\n\t\tright: 16px;\n\t\ttop: 76px;\n\t\twidth: 200px;\n\t}\n\n\t@media only screen and (max-width: 620px) {\n\t\theight: 110px;\n\t\tpadding: 8px;\n\t\tright: 8px;\n\t\ttop: 46px;\n\t\twidth: 140px;\n\t}\n`;\n\nconst MarkerItem = styled.div`\n\t@media only screen and (min-width: 621px) {\n\t\tfont-size: 16px;\n\t\tmargin-bottom: 16px;\n\t}\n\n\t@media only screen and (max-width: 620px) {\n\t\tfont-size: 12px;\n\t\tmargin-bottom: 12px;\n\t}\n`;\n\nconst MarkerIcon = styled(FontAwesomeIcon)`\n\tcolor: ${(props) => props.color};\n\n\t@media only screen and (min-width: 621px) {\n\t\tfont-size: 24px;\n\t\tmargin-right: 16px;\n\t}\n\n\t@media only screen and (max-width: 620px) {\n\t\tfont-size: 16px;\n\t\tmargin-right: 8px;\n\t}\n`;\n\nconst MapInfo = () => {\n\treturn (\n\t\t<InfoContainer>\n\t\t\t<MarkerItem>\n\t\t\t\t<MarkerIcon icon={faMapMarkerAlt} size=\"xs\" color={'#61bd4f'} />\n\t\t\t\t100개 이상\n\t\t\t</MarkerItem>\n\t\t\t<MarkerItem>\n\t\t\t\t<MarkerIcon icon={faMapMarkerAlt} size=\"xs\" color={'#f2d600'} />\n\t\t\t\t30개 이상 100개 미만\n\t\t\t</MarkerItem>\n\t\t\t<MarkerItem>\n\t\t\t\t<MarkerIcon icon={faMapMarkerAlt} size=\"xs\" color={'#eb5a46'} />\n\t\t\t\t2개 이상 30개 미만\n\t\t\t</MarkerItem>\n\t\t\t<MarkerItem>\n\t\t\t\t<MarkerIcon icon={faMapMarkerAlt} size=\"xs\" color={'#666666'} />\n\t\t\t\t없음\n\t\t\t</MarkerItem>\n\t\t</InfoContainer>\n\t);\n};\n\nexport default MapInfo;\n","import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './Header';\nimport Store from './Store';\nimport { renderToString } from 'react-dom/server';\nimport MapInfo from './MapInfo';\nimport styled from 'styled-components';\n\nconst MapContainer = styled.div`\n\twidth: 100%;\n\n\t@media only screen and (min-width: 621px) {\n\t\theight: ${window.innerHeight - 60}px;\n\t\tmargin-top: 60px;\n\t}\n\n\t@media only screen and (max-width: 620px) {\n\t\theight: ${window.innerHeight - 40}px;\n\t\tmargin-top: 40px;\n\t}\n`;\n\nlet overlayedStores = [];\nlet overlayes = [];\nlet map = null;\n\nconst MaskMap = () => {\n\tconst markStores = async (lat, lng) => {\n\t\ttry {\n\t\t\tconst url =\n\t\t\t\t'https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?lat=' + lat + '&lng=' + lng + '&m=2000';\n\t\t\tconst result = await (await axios.get(url, { timeout: 10 * 1000 })).data;\n\t\t\tlet position = null;\n\t\t\tlet content = '';\n\t\t\tfor (let i = 0; i < result.count; i++) {\n\t\t\t\tif (overlayedStores[result.stores[i].code] !== undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tposition = new window.kakao.maps.LatLng(result.stores[i].lat, result.stores[i].lng);\n\n\t\t\t\tcontent = renderToString(<Store store={result.stores[i]} key={result.stores[i].code} />);\n\t\t\t\tconst customOverlay = new window.kakao.maps.CustomOverlay({\n\t\t\t\t\tposition,\n\t\t\t\t\tcontent: content,\n\t\t\t\t});\n\n\t\t\t\toverlayedStores[result.stores[i].code] = result.stores[i];\n\t\t\t\toverlayes.push(customOverlay);\n\t\t\t\tcustomOverlay.setMap(map);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\talert('서버로부터 마스크 정보를 불러올 수 없습니다. 잠시 후 다시 시도해 주십시오.');\n\t\t}\n\t};\n\n\tconst onSearch = (keyword) => {\n\t\tif (keyword === '') return;\n\n\t\tconst ps = new window.kakao.maps.services.Places();\n\n\t\ttry {\n\t\t\tps.keywordSearch(keyword, async (data, status, pagination) => {\n\t\t\t\tif (status === window.kakao.maps.services.Status.OK) {\n\t\t\t\t\t// 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n\t\t\t\t\t// LatLngBounds 객체에 좌표를 추가합니다\n\t\t\t\t\tvar bounds = new window.kakao.maps.LatLngBounds();\n\t\t\t\t\tlet lat = 0;\n\t\t\t\t\tlet lng = 0;\n\t\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\t\tbounds.extend(new window.kakao.maps.LatLng(data[i].y, data[i].x));\n\t\t\t\t\t\tlat = Number(lat) + Number(data[i].y);\n\t\t\t\t\t\tlng = Number(lng) + Number(data[i].x);\n\t\t\t\t\t}\n\n\t\t\t\t\tlat = Number(lat) / data.length;\n\t\t\t\t\tlng = Number(lng) / data.length;\n\n\t\t\t\t\tmarkStores(lat, lng);\n\n\t\t\t\t\t// 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n\t\t\t\t\tmap.setBounds(bounds);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\talert('장소 검색 중 에러가 발생하였습니다. 잠시 후 다시 시도해 주십시오.');\n\t\t}\n\t};\n\n\tconst onRefresh = async () => {\n\t\toverlayedStores = [];\n\t\tconst center = map.getCenter();\n\t\tfor (let i = 0; i < overlayes.length; i++) {\n\t\t\toverlayes[i].setMap(null);\n\t\t}\n\t\toverlayes = [];\n\t\tmarkStores(center.getLat(), center.getLng());\n\t};\n\n\tuseEffect(() => {\n\t\tconst container = document.getElementById('map');\n\t\tconst defaultLat = 37.555299445604334;\n\t\tconst defaultLng = 126.9736589530062;\n\t\tconst options = {\n\t\t\t// 서울역 근처 세팅\n\t\t\tcenter: new window.kakao.maps.LatLng(defaultLat, defaultLng),\n\t\t\tlevel: 4,\n\t\t};\n\n\t\tmap = new window.kakao.maps.Map(container, options);\n\n\t\tconst zoomControl = new window.kakao.maps.ZoomControl();\n\t\tmap.addControl(zoomControl, window.kakao.maps.ControlPosition.BOTTOMRIGHT);\n\n\t\tmarkStores(defaultLat, defaultLng);\n\t\twindow.kakao.maps.event.addListener(map, 'dragend', async () => {\n\t\t\tconst center = map.getCenter();\n\n\t\t\tmarkStores(center.getLat(), center.getLng());\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<Header onSearch={onSearch} onRefresh={onRefresh} />\n\t\t\t<MapInfo />\n\t\t\t<MapContainer id=\"map\"></MapContainer>\n\t\t</div>\n\t);\n};\n\nexport default MaskMap;\n","import React from 'react';\nimport MaskMap from './components/MaskMap';\n\nfunction App() {\n\treturn <MaskMap />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}